name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker Image
      run: docker build -t my-custom-os-dev-image . -f Dockerfile
    - name: Start Docker Container
      uses: hoverkraft-tech/compose-action@v2.2.0
      with:
        services: my-custom-os-dev-image
        build: .
    - name: Build Rust OS
      run: cargo build --verbose --target x86_64-unit_os.json
    - name: Run tests
      run: |
        export CARGO_MANIFEST_DIR=$(pwd)
        cargo bootimage --target x86_64-unit_os.json
        qemu-system-x86_64 \
          -drive format=raw,file=target/x86_64-unit_os/debug/bootimage-rusty_os.bin \
          -no-reboot \
          -device isa-debug-exit,iobase=0xf4,iosize=0x04 \
          -serial stdio \
          -display none
