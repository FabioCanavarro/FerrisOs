name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker Image
      run: docker build -t my-custom-os-dev-image . -f Dockerfile
    
    - name: Build and Test Rust OS
      run: |
        docker run --rm -v $(pwd):/app my-custom-os-dev-image /bin/bash -c "
          cd /app && 
          cargo build --verbose --target x86_64-unit_os.json && 
          export CARGO_MANIFEST_DIR=/app && 
          cargo bootimage --target x86_64-unit_os.json && 
          qemu-system-x86_64 \
            -drive format=raw,file=target/x86_64-unit_os/debug/bootimage-rusty_os.bin \
            -no-reboot \
            -device isa-debug-exit,iobase=0xf4,iosize=0x04 \
            -serial stdio \
            -display none
        "
